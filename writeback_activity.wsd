@startuml
skinparam ConditionEndStyle hline
start
floating note left: read Applyout activity

if (CHUNK_BY_SEGMENTS) then (yes)
  :Chunk by segments;
  if (NbSegments < CHUNK_SEGMENT_SIZE) then (no)
    :calculate nbChunkSegments;
    while (chunk < nbChunkSegments)
      :applyout: generate chunk query;
      :call ChunkDates>
    endwhile
  else (yes)
    :Call ChunkDates>
  endif
else (no)
  if (CHUNK_BY_DATES) then (yes)
    :Call ChunkDates>
  else (no)
    :Chunk by rows;
    if (NbRows < CHUNK_ROW_SIZE) then (no)
      :calculate nbChunkRows;
      while (chunk < nbChunkRows)
        :applyout: generate chunk query;
        :call Write>
      endwhile
    else (yes)
      :Call Write>
    endif
  endif
endif

start
floating note left: Chunk by dates
partition ChunkDates {
  :calculate nbDates;
  if (nbChunkDates < CHUNK_DATE_SIZE) then (no)
    while (chunk < nbChunkDates)
      :applyout: generate chunk query;
      :call Write>
    endwhile
  else (yes)
    :Call Write>
  endif
}
stop

start
floating note left: write forecast activity
partition Write {
  :read chunk;
  :getWindowDatesForecast;
  :getSegmentDistinctValues;
  :planning generateQuery;
  floating note left:Filter on window dates\nFilter on distinct segments
  while (data of chunk available?)
    :collect CellValueContext;
  endwhile

  while (CellValueContext available?)
    :update cell with CellValueContext;
  endwhile
  :submitValues;


}
stop


@enduml
